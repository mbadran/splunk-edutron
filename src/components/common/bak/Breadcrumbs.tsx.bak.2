import React from "react";
import { ChevronRight } from "lucide-react";

interface BreadcrumbsProps {
  currentRoute: string;
  onNavigate?: (route: string) => void;
}

interface BreadcrumbItem {
  label: string;
  route: string;
}

const Breadcrumbs: React.FC<BreadcrumbsProps> = ({
  currentRoute,
  onNavigate,
}) => {
  // Generate breadcrumbs based on current route
  const generateBreadcrumbs = (route: string): BreadcrumbItem[] => {
    if (route === "/") {
      return [];
    }

    // Parse route segments
    const segments = route.split("/").filter((segment) => segment !== "");

    const breadcrumbs: BreadcrumbItem[] = [];
    let currentPath = "";

    // Map specific routes to better labels
    const routeLabels: Record<string, string> = {
      catalogs: "Catalogs",
      planner: "Planner",
      courses: "Courses",
      settings: "Settings",
      "splunk-step": "Splunk Step",
    };

    // Build breadcrumbs but exclude the last segment (current page)
    segments.slice(0, -1).forEach((segment) => {
      currentPath += `/${segment}`;

      let label = segment.charAt(0).toUpperCase() + segment.slice(1);

      if (routeLabels[segment]) {
        label = routeLabels[segment];
      }

      breadcrumbs.push({
        label,
        route: currentPath,
      });
    });

    return breadcrumbs;
  };

  const breadcrumbs = generateBreadcrumbs(currentRoute);
  const showChevron = currentRoute !== "/"; // Always show chevron except on home page

  const handleBreadcrumbClick = (route: string) => {
    if (onNavigate) {
      onNavigate(route);
    }
  };

  if (!showChevron) {
    return null;
  }

  return (
    <nav id="breadcrumbs" className="flex items-center gap-1 ml-2">
      {breadcrumbs.map((crumb) => (
        <React.Fragment key={crumb.route}>
          <ChevronRight
            className="w-4 h-4 text-white font-bold"
            style={{ strokeWidth: 3 }}
          />
          <button
            id={`breadcrumb-${crumb.route.replace(/\//g, "-")}`}
            onClick={() => handleBreadcrumbClick(crumb.route)}
            className="px-2 py-1 rounded text-sm font-bold text-orange-500 hover:text-orange-300 hover:bg-white/10 transition-colors"
          >
            {crumb.label}
          </button>
        </React.Fragment>
      ))}
      {/* Final chevron before page title - always show when not on home */}
      <ChevronRight
        className="w-4 h-4 text-white font-bold ml-1"
        style={{ strokeWidth: 3 }}
      />
    </nav>
  );
};

export default Breadcrumbs;
