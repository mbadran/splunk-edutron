import React, { useState } from "react";
import { Home, Menu, X } from "lucide-react";
import { NAV_ROUTES } from "@/lib/routes";
import Breadcrumbs from "./Breadcrumbs";

interface NavigationProps {
  onBackToHome: () => void;
  currentRoute?: string;
  onNavigate?: (route: string) => void;
}

// interface NavRoute {
//   label: string;
//   route: string;
// }

// const navRoutes: NavRoute[] = [
//   { label: "Home", route: "/" },
//   { label: "Catalogs", route: "/catalogs" },
//   { label: "Planner", route: "/planner" },
// ];

const Navigation: React.FC<NavigationProps> = ({
  onBackToHome,
  currentRoute = "",
  onNavigate,
}) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  const handleNavigation = (route: string) => {
    if (route === "/") {
      onBackToHome();
    } else if (onNavigate) {
      onNavigate(route);
    }
    setIsMenuOpen(false);
  };

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  return (
    <>
      <div className="flex items-center gap-3" id="navigation">
        {/* Burger Menu */}
        <div className="relative" id="donut-menu">
          <button
            id="donut-menu-trigger"
            onClick={toggleMenu}
            className="flex items-center justify-center w-10 h-10 bg-white text-black rounded-full hover:bg-gray-100 transition-all shadow-lg"
            aria-label="Navigation menu"
          >
            {isMenuOpen ? (
              <X className="w-5 h-5" />
            ) : (
              <Menu className="w-5 h-5" />
            )}
          </button>

          {isMenuOpen && (
            <div
              id="donut-menu-items"
              className="absolute top-12 left-0 bg-gradient-to-br from-slate-800 via-slate-700 to-blue-900 rounded-lg shadow-xl border border-orange-500 py-2 min-w-[150px] z-30"
            >
              {NAV_ROUTES.map((navRoute) => (
                <button
                  key={navRoute.route}
                  id={`nav-${navRoute.route.replace("/", "") || "home"}`}
                  onClick={() => handleNavigation(navRoute.route)}
                  className={`w-full text-left px-4 py-2 hover:bg-white/10 transition-colors font-bold text-white ${
                    currentRoute === navRoute.route
                      ? "bg-orange-500/20 border-l-4 border-orange-500"
                      : ""
                  }`}
                >
                  {navRoute.label}
                </button>
              ))}
            </div>
          )}
        </div>

        {/* Main Home Button */}
        <button
          id="home-button"
          onClick={onBackToHome}
          className="flex items-center gap-3 px-4 py-2 bg-gradient-to-r from-orange-500 to-pink-500 text-white rounded-lg hover:from-orange-600 hover:to-pink-600 transition-all font-medium shadow-lg"
        >
          <Home className="w-4 h-4" />
          <strong>Splunk EDUTRON</strong>
        </button>

        {/* Breadcrumbs */}
        <Breadcrumbs currentRoute={currentRoute} onNavigate={onNavigate} />
      </div>

      {/* Overlay to close menu when clicking outside */}
      {isMenuOpen && (
        <div
          className="fixed inset-0 z-10"
          onClick={() => setIsMenuOpen(false)}
          aria-hidden="true"
        />
      )}
    </>
  );
};

export default Navigation;
