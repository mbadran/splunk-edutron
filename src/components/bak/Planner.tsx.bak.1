import React, { useState, useCallback } from "react";
import Header from "@/components/common/Header";
import PlanScroller from "./PlanScroller";
import { Course } from "@/types/types";
import { DEFAULT_PLAN_TITLE, DEFAULT_TEAM_NAMES } from "@/utils/constants";

interface PlannerProps {
  onBackToHome: () => void;
}

const Planner: React.FC<PlannerProps> = ({ onBackToHome }) => {
  // SIMPLIFIED STATE MANAGEMENT
  const [planTitle, setPlanTitle] = useState(DEFAULT_PLAN_TITLE);
  const [teamMembers, setTeamMembers] = useState([DEFAULT_TEAM_NAMES[0]]);
  const [selections, setSelections] = useState<Record<string, boolean>>({});
  const [courses, setCourses] = useState<Course[]>([]);
  const [budget, setBudget] = useState<number | null>(null);

  // Memoized total calculation
  const total = courses.reduce((acc, course, courseIndex) => {
    const memberSelections = teamMembers.reduce((memberAcc, _, memberIndex) => {
      const key = `${courseIndex}-${memberIndex}`;
      return memberAcc + (selections[key] ? course.Price : 0);
    }, 0);
    return acc + memberSelections;
  }, 0);

  // SIMPLIFIED HANDLERS
  const handleUpdateTitle = useCallback((newTitle: string) => {
    setPlanTitle(newTitle);
  }, []);

  const handleUndo = useCallback(() => {
    // TODO: Implement undo functionality
    console.log("Undo action triggered");
  }, []);

  const handleRedo = useCallback(() => {
    // TODO: Implement redo functionality
    console.log("Redo action triggered");
  }, []);

  const handleDownload = useCallback(() => {
    alert("Coming soon!");
  }, []);

  const handleTeamMembersChange = useCallback((newTeamMembers: string[]) => {
    setTeamMembers(newTeamMembers);
  }, []);

  const handleSelectionsChange = useCallback(
    (newSelections: Record<string, boolean>) => {
      setSelections(newSelections);
    },
    [],
  );

  const handleBudgetChange = useCallback((newBudget: number | null) => {
    setBudget(newBudget);
  }, []);

  return (
    <div id="planner" className="min-h-screen bg-gray-50 flex flex-col">
      <Header
        onBackToHome={onBackToHome}
        pageTitle={planTitle}
        onUpdateTitle={handleUpdateTitle}
        onUndo={handleUndo}
        onRedo={handleRedo}
        onDownload={handleDownload}
        canUndo={false} // TODO: Implement undo/redo state
        canRedo={false}
        total={total}
        onBudgetChange={handleBudgetChange}
        currentRoute="/planner"
        onNavigate={(route) => console.log("Navigate to:", route)}
      />

      <PlanScroller
        courses={courses}
        teamMembers={teamMembers}
        selections={selections}
        onTeamMembersChange={handleTeamMembersChange}
        onSelectionsChange={handleSelectionsChange}
      />
    </div>
  );
};

export default Planner;