"use client";

import { useEffect } from "react";
import Link from "next/link";
import { useAtom } from "jotai";
import { GraduationCap, BookOpen, ExternalLink } from "lucide-react";
import { APP_NAME } from "@/utils/constants";

// Force static generation
export const dynamic = "force-static";

// Jotai atoms for state management
import { atom } from "jotai";

interface Catalog {
  id: string;
  name: string;
  description?: string;
  courseCount?: number;
  slug: string;
}

// Global state atoms
const catalogsAtom = atom<Catalog[]>([]);
const catalogsLoadingAtom = atom<boolean>(true);
const workingAtom = atom<boolean>(false);

export default function Catalogs() {
  const [catalogs, setCatalogs] = useAtom(catalogsAtom);
  const [loading, setLoading] = useAtom(catalogsLoadingAtom);
  const [, setWorking] = useAtom(workingAtom);

  // Set page title
  useEffect(() => {
    document.title = `Catalogs - ${APP_NAME}`;
  }, []);

  // Load catalogs
  useEffect(() => {
    const loadCatalogs = async () => {
      try {
        setWorking(true);

        // Mock data - in production this would come from your API/data source
        const mockCatalogs: Catalog[] = [
          {
            id: "abc123",
            name: "Splunk STEP",
            description:
              "Comprehensive Splunk training catalog with hands-on courses covering core platform skills, advanced analytics, and administration.",
            courseCount: 48,
            slug: "splunk-step-abc123",
          },
        ];

        setCatalogs(mockCatalogs);
      } catch (error) {
        console.error("Failed to load catalogs:", error);
      } finally {
        setLoading(false);
        setWorking(false);
      }
    };

    loadCatalogs();
  }, [setCatalogs, setLoading, setWorking]);

  if (loading) {
    return (
      <div
        id="catalogs-page"
        className="min-h-screen flex items-center justify-center p-4"
        style={{
          backgroundImage: "url(/img/luis-tosta-COAbFWdOf5s-unsplash.jpg)",
          backgroundSize: "cover",
          backgroundPosition: "center",
          backgroundRepeat: "no-repeat",
        }}
      >
        <div id="loading-indicator" className="text-center">
          <div className="bg-gradient-to-br from-slate-800 via-slate-700 to-blue-900 backdrop-blur-md rounded-3xl p-8 shadow-2xl border border-white/20">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500 mx-auto mb-4"></div>
            <p className="text-white/90">Loading catalogs...</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div
      id="catalogs-page"
      className="min-h-screen p-4"
      style={{
        backgroundImage: "url(/img/luis-tosta-COAbFWdOf5s-unsplash.jpg)",
        backgroundSize: "cover",
        backgroundPosition: "center",
        backgroundRepeat: "no-repeat",
      }}
    >
      <div className="max-w-6xl mx-auto">
        <header id="catalogs-header" className="mb-8 text-center">
          <div className="bg-gradient-to-br from-slate-800 via-slate-700 to-blue-900 backdrop-blur-md rounded-3xl p-8 shadow-2xl border border-white/20 inline-block">
            <div className="inline-flex items-center justify-center w-16 h-16 bg-white/20 backdrop-blur-sm rounded-2xl mb-4">
              <BookOpen className="w-8 h-8 text-white" />
            </div>
            <h1 className="text-4xl font-bold text-white mb-2 tracking-tight">
              Training{" "}
              <span className="bg-gradient-to-r from-orange-500 to-pink-500 bg-clip-text text-transparent">
                Catalogs
              </span>
            </h1>
            <p className="text-white/90 font-light">
              Browse available training catalogs and courses
            </p>
          </div>
        </header>

        <div
          id="catalogs-grid"
          className="grid gap-6 md:grid-cols-2 lg:grid-cols-3 max-w-4xl mx-auto"
        >
          {catalogs.map((catalog) => (
            <div
              key={catalog.id}
              id={`catalog-card-${catalog.id}`}
              className="bg-gradient-to-br from-slate-800 via-slate-700 to-blue-900 backdrop-blur-md rounded-3xl p-8 shadow-2xl border border-white/20 hover:border-white/30 transition-all duration-200 transform hover:scale-105"
            >
              <div className="mb-6">
                <div className="inline-flex items-center justify-center w-12 h-12 bg-white/20 backdrop-blur-sm rounded-xl mb-4">
                  <GraduationCap className="w-6 h-6 text-white" />
                </div>
                <h2 className="text-2xl font-bold text-white mb-3 tracking-tight">
                  {catalog.name}
                </h2>

                {catalog.description && (
                  <p className="text-white/80 mb-4 line-clamp-4 leading-relaxed">
                    {catalog.description}
                  </p>
                )}

                <div className="flex items-center gap-2 text-sm text-white/70 mb-6">
                  <BookOpen className="w-4 h-4" />
                  {catalog.courseCount !== undefined && (
                    <span id={`course-count-${catalog.id}`}>
                      {catalog.courseCount} courses available
                    </span>
                  )}
                </div>
              </div>

              <div className="space-y-3">
                <Link
                  href={`/catalogs/${catalog.slug}/courses`}
                  id={`view-courses-${catalog.id}`}
                  className="w-full bg-gradient-to-r from-orange-500 to-pink-500 text-white hover:from-orange-600 hover:to-pink-600 font-bold py-3 px-6 rounded-xl transition-all duration-200 transform hover:scale-105 hover:shadow-lg flex items-center justify-center gap-2 drop-shadow-sm"
                  style={{ textShadow: "0 1px 2px rgba(0, 0, 0, 0.3)" }}
                >
                  <BookOpen className="w-4 h-4" />
                  Browse Courses
                </Link>

                <Link
                  href={`/catalogs/${catalog.slug}`}
                  id={`view-catalog-${catalog.id}`}
                  className="w-full bg-white/10 backdrop-blur-sm text-white hover:bg-white/20 font-medium py-3 px-6 rounded-xl transition-all duration-200 flex items-center justify-center gap-2 border border-white/20"
                >
                  <ExternalLink className="w-4 h-4" />
                  View Details
                </Link>
              </div>
            </div>
          ))}
        </div>

        {catalogs.length === 0 && !loading && (
          <div id="no-catalogs" className="text-center py-12">
            <div className="bg-gradient-to-br from-slate-800 via-slate-700 to-blue-900 backdrop-blur-md rounded-3xl p-12 shadow-2xl border border-white/20 max-w-md mx-auto">
              <div className="inline-flex items-center justify-center w-16 h-16 bg-white/20 backdrop-blur-sm rounded-2xl mb-6">
                <BookOpen className="w-8 h-8 text-white/60" />
              </div>
              <h3 className="text-xl font-bold text-white mb-3">
                No catalogs available
              </h3>
              <p className="text-white/70">
                Check back later for training catalogs.
              </p>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
