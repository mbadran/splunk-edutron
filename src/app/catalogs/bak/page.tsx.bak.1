"use client";

import { useEffect, useState } from "react";
import Link from "next/link";
import { APP_NAME } from "@/utils/constants";

// Force static generation
export const dynamic = "force-static";

interface Catalog {
  id: string;
  name: string;
  description?: string;
  courseCount?: number;
  slug: string; // For URL generation
}

export default function Catalogs() {
  const [catalogs, setCatalogs] = useState<Catalog[]>([]);
  const [loading, setLoading] = useState(true);

  // Set page title
  useEffect(() => {
    document.title = `Catalogs - ${APP_NAME}`;
  }, []);

  // Load catalogs - this will need to be moved to shared state/context
  useEffect(() => {
    // TODO: Move this logic to shared state management
    // For now, placeholder for the single catalog
    const loadCatalogs = async () => {
      try {
        // This should come from your state management library
        // or be passed down from a higher-level component
        const mockCatalogs: Catalog[] = [
          {
            id: "abc123",
            name: "Splunk Step",
            description: "Comprehensive Splunk training catalog",
            courseCount: 0, // Will be populated when courses are loaded
            slug: "splunk-step-abc123",
          },
        ];

        setCatalogs(mockCatalogs);
      } catch (error) {
        console.error("Failed to load catalogs:", error);
      } finally {
        setLoading(false);
      }
    };

    loadCatalogs();
  }, []);

  if (loading) {
    return (
      <div
        id="catalogs-page"
        className="min-h-screen bg-gray-50 flex items-center justify-center"
      >
        <div id="loading-indicator" className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">Loading catalogs...</p>
        </div>
      </div>
    );
  }

  return (
    <div id="catalogs-page" className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        <header id="catalogs-header" className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            Training Catalogs
          </h1>
          <p className="text-gray-600">
            Browse available training catalogs and courses
          </p>
        </header>

        <div
          id="catalogs-grid"
          className="grid gap-6 md:grid-cols-2 lg:grid-cols-3"
        >
          {catalogs.map((catalog) => (
            <div
              key={catalog.id}
              id={`catalog-card-${catalog.id}`}
              className="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 p-6"
            >
              <h2 className="text-xl font-semibold text-gray-900 mb-3">
                {catalog.name}
              </h2>

              {catalog.description && (
                <p className="text-gray-600 mb-4 line-clamp-3">
                  {catalog.description}
                </p>
              )}

              <div className="flex items-center justify-between">
                <div className="text-sm text-gray-500">
                  {catalog.courseCount !== undefined && (
                    <span id={`course-count-${catalog.id}`}>
                      {catalog.courseCount} courses
                    </span>
                  )}
                </div>

                <div className="space-x-2">
                  <Link
                    href={`/catalogs/${catalog.slug}`}
                    id={`view-catalog-${catalog.id}`}
                    className="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                  >
                    View Details
                  </Link>

                  <Link
                    href={`/catalogs/${catalog.slug}/courses`}
                    id={`view-courses-${catalog.id}`}
                    className="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                  >
                    Browse Courses
                  </Link>
                </div>
              </div>
            </div>
          ))}
        </div>

        {catalogs.length === 0 && (
          <div id="no-catalogs" className="text-center py-12">
            <div className="text-gray-400 mb-4">
              <svg
                className="mx-auto h-12 w-12"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={2}
                  d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"
                />
              </svg>
            </div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">
              No catalogs available
            </h3>
            <p className="text-gray-500">
              Check back later for training catalogs.
            </p>
          </div>
        )}
      </div>
    </div>
  );
}
