export interface Catalog {
  id: string;
  name: string;
  description?: string;
  courseCount?: number;
  slug: string;
  csvPath?: string;
  courses?: Course[];
}

export interface CatalogConfig {
  id: string;
  name: string;
  description: string;
  slug: string;
  csvPath: string;
}

export interface Course {
  Alias: string;
  Category: string;
  Duration: number;
  ID: string;
  Language: string;
  Mode: string;
  Name: string;
  Price: number;
  STEP_ID?: string;
  [key: string]: any;
}

export interface Team {
  id: string;
  name: string;
  members: Person[];
}

export interface Person {
  id: string;
  name: string;
  email?: string;
  role?: string;
}

// Plan selection format: "person-name_course-id" (e.g., "richard-hendricks_EDU-777")
export type PlanSelection = string;

export interface PlanState {
  id: string;
  title: string;
  description?: string;
  catalogs: string[]; // catalog IDs
  teamMembers: Person[];
  selections: Record<PlanSelection, boolean>; // "person-name_course-id" format
  budget: number | null;
  createdAt: string;
  updatedAt: string;
}

export interface Plan {
  metadata: {
    id: string;
    title: string;
    version: string;
    createdAt: string;
    updatedAt: string;
    exportedAt: string;
  };
  catalogs: string[]; // catalog IDs
  teamMembers: Person[];
  selections: Record<PlanSelection, boolean>; // "person-name_course-id" format
  budget: number | null;
  totals: {
    selectedCourses: number;
    totalCost: number;
    costPerMember: Record<string, number>;
  };
  courses: Course[]; // full course data for import
}

export interface Status {
  isWorking: boolean;
  message?: string;
}