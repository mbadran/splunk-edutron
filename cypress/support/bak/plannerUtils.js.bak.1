/**
 * Cypress Utilities for Planner Tests
 */

// Essential constants only
const PLANNER_CONSTANTS = {
  SELECTION_WAIT: 250,
  CALCULATOR_WAIT: 1000,
  FIRST_TEAM_MEMBER_COLUMN: 10,
  PRICE_COLUMN: 5,
};

// Extract price from table row - SIMPLIFIED: One return path, proper chaining
const extractPriceFromRow = (rowIndex) => {
  return cy
    .get(`#table-row-${rowIndex}`)
    .find(`[aria-colindex="${PLANNER_CONSTANTS.PRICE_COLUMN}"]`)
    .invoke("text")
    .then((priceText) => {
      const cleanText = priceText.trim();

      // Handle "Free" case
      if (cleanText === "Free" || cleanText === "") {
        return cy.then(() => 0); // Chain properly with cy.then()
      }

      // Handle numeric case
      const numericPrice = parseFloat(cleanText.replace(/[^0-9.]/g, ""));
      const finalPrice = isNaN(numericPrice) ? 0 : numericPrice;
      return cy.then(() => finalPrice); // Chain properly with cy.then()
    });
};

// Select course for team member
const selectCourseForMember = (
  rowIndex,
  memberColumnIndex = PLANNER_CONSTANTS.FIRST_TEAM_MEMBER_COLUMN,
) => {
  cy.get(`#table-row-${rowIndex}`).within(() => {
    cy.get(`[aria-colindex="${memberColumnIndex}"]`).within(() => {
      cy.get('[role="button"]').click();
    });
  });
  cy.wait(PLANNER_CONSTANTS.SELECTION_WAIT);
};

// Verify selection state
const verifySelectionState = (
  rowIndex,
  shouldBeSelected,
  memberColumnIndex = PLANNER_CONSTANTS.FIRST_TEAM_MEMBER_COLUMN,
) => {
  cy.get(`#table-row-${rowIndex}`).within(() => {
    cy.get(`[aria-colindex="${memberColumnIndex}"]`).within(() => {
      if (shouldBeSelected) {
        cy.get(".bg-emerald-400, .plan-cell-selected").should("exist");
      } else {
        cy.get(".border-gray-300, .plan-cell-unselected").should("exist");
      }
    });
  });
};

// Wait for planner ready
const waitForPlannerReady = () => {
  cy.title().should("contain", "Planner");

  cy.get("#planner").should("be.visible");
  cy.get("#monotable").should("be.visible");
  cy.get("#calculator").should("be.visible");

  cy.get("body").then(($body) => {
    if ($body.find("#table-loading-state").length > 0) {
      cy.get("#table-loading-state").should("not.be.visible");
    }
  });
};

// Verify calculator total
const verifyCalculatorTotal = (expectedTotal) => {
  cy.get("#calculator").within(() => {
    cy.get("#total-value").should("contain", expectedTotal.toString());
  });
};

// Export only what we need
export {
  PLANNER_CONSTANTS,
  extractPriceFromRow,
  selectCourseForMember,
  verifySelectionState,
  waitForPlannerReady,
  verifyCalculatorTotal,
};
